Levando em consideração as paginas Login e Home, faça com que a pagina Form tenha o mesmo estilo e se comporte da mesma maneira
--form/index.tsx--
import { MdEmail, MdLock } from "react-icons/md";
import { useNavigate } from "react-router-dom";
import { Header } from "../../components/Header";
import { Button } from "../../components/Button";
import { useForm, SubmitHandler } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import * as yup from "yup";
import { api } from '../../services/api';
import { Column, Container, CriarText, EsqueciText, Row, SubTitleLogin, Title, Wrapper, TitleLogin } from './styles';
import { FormData } from './types'; // Importa a interface de types.ts

// Esquema de validação
const schema = yup.object().shape({
    nome: yup.string().required("O campo é obrigatório."),
    email: yup.string().email("E-mail inválido.").required("O campo é obrigatório."),
    idade: yup.number().required("O campo é obrigatório.").positive("O campo deve ser positivo.").integer("O campo deve ser um número inteiro."),
    password: yup.string().min(6, "A senha deve ter pelo menos 6 caracteres").required("O campo é obrigatório."),
    confirmPassword: yup.string()
        .oneOf([yup.ref('password'), undefined], "As senhas devem coincidir")
        .required("Confirmação de senha é obrigatória."),
}).required();

const Form = () => {
    const navigate = useNavigate();
    const { register, handleSubmit, formState: { errors } } = useForm<FormData>({
        resolver: yupResolver(schema) as unknown as any,
    });

    const onSubmit: SubmitHandler<FormData> = async (data) => {
        try {
            const response = await api.get(`/users?email=${data.email}`);
            if (response.data.length > 0) {
                alert("E-mail já cadastrado. Tente fazer login.");
                return;
            }
            
            await api.post("/users", {
                nome: data.nome,
                email: data.email,
                idade: data.idade,
                userName: data.userName,
                phNumber: data.phNumber,
                password: data.password
            });
            
            alert("Cadastro realizado com sucesso!");
            navigate("/home");
        } catch (error) {
            alert("Erro ao cadastrar. Tente novamente.");
        }
    };

    return (
        <>
            <Container>
                <Column />
                <Column>
                    <Wrapper>
                        <Title>CADASTRE-SE!</Title>
                        <TitleLogin>Faça seu cadastro</TitleLogin>
                        <SubTitleLogin>Faça seu login e mude sua vida</SubTitleLogin>
                        
                        <form onSubmit={handleSubmit(onSubmit)}>
                            <div>
                                <label htmlFor="nome">Nome</label>
                                <div style={{ display: "flex", alignItems: "center" }}>
                                    <MdLock />
                                    <input
                                        id="nome"
                                        type="text"
                                        placeholder="Digite o nome "
                                        {...register("nome")}
                                    />
                                </div>
                                {errors.nome && <div>{errors.nome.message}</div>}
                            </div>

                            <div>
                                <label htmlFor="email">E-mail</label>
                                <div style={{ display: "flex", alignItems: "center" }}>
                                    <MdEmail />
                                    <input
                                        id="email"
                                        type="email"
                                        placeholder="Digite seu e-mail"
                                        {...register("email")}
                                    />
                                </div>
                                {errors.email && <div>{errors.email.message}</div>}
                            </div>

                            <div>
                                <label htmlFor="idade">Idade</label>
                                <div style={{ display: "flex", alignItems: "center" }}>
                                    <MdLock />
                                    <input
                                        id="idade"
                                        type="number"
                                        placeholder="Digite sua idade"
                                        {...register("idade")}
                                    />
                                </div>
                                {errors.idade && <div>{errors.idade.message}</div>}
                            </div>
                            
                            <div>
                                <label htmlFor="userName">Nome de Usuário</label>
                                <div style={{ display: "flex", alignItems: "center" }}>
                                    <MdLock />
                                    <input
                                        id="userName"
                                        type="text"
                                        placeholder="Digite o nome de usuário"
                                        {...register("userName")}
                                    />
                                </div>
                                {errors.userName && <div>{errors.userName.message}</div>}
                            </div>

                            <div>
                                <label htmlFor="phNumber">Número de Telefone</label>
                                <div style={{ display: "flex", alignItems: "center" }}>
                                    <MdLock />
                                    <input
                                        id="phNumber"
                                        type="text"
                                        placeholder="Digite o número de telefone"
                                        {...register("phNumber")}
                                    />
                                </div>
                                {errors.phNumber && <div>{errors.phNumber.message}</div>}
                            </div>

                            <div>
                                <label htmlFor="password">Senha</label>
                                <div style={{ display: "flex", alignItems: "center" }}>
                                    <MdLock />
                                    <input
                                        id="password"
                                        type="password"
                                        placeholder="Digite a senha"
                                        {...register("password")}
                                    />
                                </div>
                                {errors.password && <div>{errors.password.message}</div>}
                            </div>

                            <div>
                                <label htmlFor="confirmPassword">Confirmação da Senha</label>
                                <div style={{ display: "flex", alignItems: "center" }}>
                                    <MdLock />
                                    <input
                                        id="confirmPassword"
                                        type="password"
                                        placeholder="Confirme a senha"
                                        {...register("confirmPassword")}
                                    />
                                </div>
                                {errors.confirmPassword && <div>{errors.confirmPassword.message}</div>}
                            </div>

                            <Button title="Cadastrar" variant="secondary" type="submit" />
                        </form>

                        <Row>
                            <EsqueciText>Esqueci minha senha</EsqueciText>
                            <CriarText>Criar conta</CriarText>
                        </Row>
                    </Wrapper>
                </Column>
            </Container>
        </>
    );
}

export { Form };

--form/styles.ts--

import styled from "styled-components";

export const Container = styled.main`
    width:100%;
    max-width:80%;
    margin:0 auto;
    margin-top:120px;

    display:flex;
    flex-direction:row;
    justify-content:space-between;
    align-items:center;
`
export const Title = styled.h2`
    font-family:'Open-sans';
    font-style:normal;
    font-weight:700;
    font-size:32px;
    width:320px;
    margin-bottom:20px;
    line-height:44px;

    color:#fff;
`
export const TitleLogin = styled.p`
    font-family:'Open-sans';
    font-style:normal;
    font-weight:700;
    font-size:32px;
    margin-bottom:20px;
    line-height:44px;
`
export const SubTitleLogin = styled.p`
    font-family:'Open-sans';
    font-style: normal;
    font-weight:400;
    font-size:18px;
    margin-bottom:15px;
    line-height:25px;
`
export const EsqueciText = styled.p`
    font-family:'Open-sans';
    font-style: normal;
    font-weight:700;
    font-size:14px;
    line-height:19px;

    color:#e5e844;
`
export const CriarText = styled.p`
    font-family:'Open-sans';
    font-style: normal;
    font-weight:700;
    font-size:14px;
    line-height:19px;

    color:#e23dd7;
`
export const Wrapper = styled.div`
    max-width:300px;
`
export const Column = styled.div`
    flex:1;
`
export const Row = styled.div`
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    margin-top: 20px;
`

--login/index.tsx--

import React from "react";
import { MdEmail, MdLock } from "react-icons/md";
import { useNavigate } from "react-router-dom";
import { useForm } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import * as yup from "yup";
import { useContext } from "react";
import { AuthContext } from "../../components/AuthContext";
import { Input } from "../../components/Input";
import { Button } from "../../components/Button"; // Corrigido para importação correta
import {
  Container,
  Content,
  Title,
  TitleHighLight,
  TextContent,
  ButtonGroup,
  BannerImage,
  Left,
  Right,
  Divider,
  InputWrapper
} from "./styles"; // Certifique-se que está importando corretamente
import capivaraLogo from "../../assets/capivaraLogo.png";

const schema = yup.object({
  email: yup.string().email("E-mail inválido").required("Campo obrigatório"),
  password: yup.string().min(6, "No mínimo 6 caracteres").required("Campo obrigatório"),
});

const Login = () => {
  const { login } = useContext(AuthContext);
  const navigate = useNavigate();

  const {
    control,
    handleSubmit,
    formState: { errors },
  } = useForm({
    resolver: yupResolver(schema),
    mode: "onBlur",
    reValidateMode: "onChange",
    defaultValues: {
      email: "",
      password: "",
    },
  });

  const onSubmit = async (formData: any) => {
    const success = await login(formData.email, formData.password);
    if (success) {
      navigate("/feed");
    } else {
      alert("Email ou senha inválidos.");
    }
  };

  return (
    <Container>
      <Content>
        <Left>
           <Title>
          <TitleHighLight>
            Application
            <br />
          </TitleHighLight>
          BETA
        </Title>

        <form onSubmit={handleSubmit(onSubmit)}>
        <label htmlFor="email">E-mail:</label>
        <InputWrapper>
        <MdEmail />
          <Input
            name="email"
            placeholder="Email"
            control={control}
            errorMessage={errors?.email?.message}
            />
            </InputWrapper>
          <label htmlFor="password">Senha:</label>
          <InputWrapper>
          <MdLock />
          <Input
            name="password"
            type="password"
            placeholder="Senha"
            control={control}
            errorMessage={errors?.password?.message}
            />
            </InputWrapper>
            <Button title="Entrar" type="submit" />
        </form>
        </Left>
        <Divider />
          <Right>
          <TextContent>
          Conecte-se e compartilhe com as pessoas que fazem parte da sua vida
        </TextContent>
          <ButtonGroup>
            <Button
              title="Esqueci minha senha"
              onClick={() => navigate("/recovery")}
              />
              <Divider />
            <Button title="Criar uma conta" onClick={() => navigate("/form")} />
          </ButtonGroup>
          </Right>
      </Content>
      <BannerImage img={capivaraLogo} />
    </Container>
  );
};

export { Login };

--login/styles.ts--

import styled from "styled-components";

export const Container = styled.main`
  width: 100%;
  height: 85vh;
  margin: 0 auto;
  font-family: 'Monospace, Courier New';
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  position: relative;
  overflow: hidden;
  
  Input {
    align-items:center;
    width: 60vw;
    margin: auto;
   
  } 
  
  Form {
    width:80vw;
  }

  Button {
    align-items:center;
    width:80vw;
    margin: auto;
  }

  @media (min-width: 768px) {
    flex-direction: row;
    justify-content: space-between;


    Button {
    align-items:center;
    width:100%;
    margin:0;
    margin-top:2rem;
  }
    Input {
    width:100%;
    margin:0;
  }
    Form {
    width:100%;
  }
`;
export const InputWrapper = styled.div`
  margin-bottom:2rem;
  display: flex;
  align-items: center;
  border: 1px solid #ccc;
  border-radius: 8px;
  padding: 0.5rem;
  background-color: #fff;

  svg {
    margin-right: 0.5rem;
    color: #666;
  }

  input {
    flex: 1;
    border: none;
    outline: none;
    font-size: 16px;
    font-family: "Monospace, Courier New";
    background: none;
  }
`;


export const Content = styled.div`
  display: flex;
  flex-direction: column; 
  align-items: center;
  width:100%;
  padding: 1rem;
  margin:1rem;
  border: 2px solid #ccc;
  border-radius: 8px;
  background-color: rgba(0, 0, 0, 0.1);
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);

  @media (min-width: 768px) {
    flex-direction: row; /* Monitores: elementos lado a lado */
    justify-content: space-between;
    align-items: stretch;
    width:60%;
    margin: 8rem;

  }
`;


export const Left = styled.div`
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 50%;

  @media (min-width: 768px) {
    align-items: flex-start;
    padding: 2rem;
  }
`;

export const Right = styled.div`
  flex1:1;
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 50%;

  @media (min-width: 768px) {
    margin-top: 5rem;
    align-items: flex-start;
    padding: 1rem;
  }
`;


export const Title = styled.h2`
  font-family: "Monospace, Courier New";
  font-size: 32px;
  font-weight: 700;
  margin-bottom: 1rem;
`;

export const TitleHighLight = styled.span`
  color: #41354e;
`;

export const TextContent = styled.p`
  font-size: 18px;
  color: #000;
  text-align: center;
  margin-bottom: 1rem;
`;

export const ButtonGroup = styled.div`
  margin-bottom: 1rem;
  display: flex;
  flex-direction: column; /* Lado a lado em telas maiores */
  gap: rem;
  justify-content: space-between;

  button {
    flex: 1;
    height: 3rem;
    font-size: 16px;
  }

  @media (min-width: 768px) {
    flex-direction: column; /* Empilhados no mobile */
    align-items: center;
    gap: 0.5rem;
   
    width: 100%;
  }
`;

export const BannerImage = styled.div<{ img: string }>`
  position: absolute;
  bottom: 11%;
  background-image: url(${(props) => props.img});
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  pointer-events: none;
  width: 40rem;
  height: 40rem;
  opacity: 0.05;

  @media (min-width: 768px) {
    position: absolute;
    left: 50%;
    width: 51rem;
    height: 49rem;
    bottom: 0;
  }
`;
export const Divider = styled.div`
  background-color: #41354e;

  opacity: 0.25;

  width: 100%;
  height: 1px;
  margin: 3rem 0;

  @media (min-width: 768px) {
    width: 1px;
    height: 100%; 
    align-self: stretch; 
  }
`;

--home/index.tsx--

import React from "react";
import { useNavigate } from "react-router-dom";
import { Header } from "../../components/Header";
import capivaraLogo from "../../assets/capivaraLogo.png";
import { Button } from "../../components/Button";
import {
  Container,
  Content,
  TextContent,
  Title,
  TitleHighLight,
  BannerImage,
  ButtonGroup,
  LoginSocial
} from "./styles";

const Home: React.FC = () => {
  const navigate = useNavigate();

  const handleClickSignIn = () => {
    navigate("/login");
  };

  return (
    <>
      <Container>
        <Content>
          <Title>
            <TitleHighLight>
              Application
              <br />
            </TitleHighLight>
            BETA
          </Title>
          <TextContent>
            Conecte-se e compartilhe com as pessoas que fazem parte da sua vida
          </TextContent>
          <ButtonGroup> 
            
          <LoginSocial>
          
          <span 
          className="material-symbols-outlined"
          onClick={() => navigate("/form")}
          >public
            </span>

              Inscreva-se com Qualquer Rede Social
              
          </LoginSocial>

          <a>OU</a>

            <Button 
            title="CADASTRE-SE" 
            onClick={() => navigate("/form")} 
            />
            <hr />
            <Button
              title="ENTRAR"
              variant="secondery"
              onClick={handleClickSignIn}
            />
            
           
          </ButtonGroup>
        </Content>
        <BannerImage img={capivaraLogo} />
      </Container>
    </>
  );
};

export { Home };

--home/styles.ts--

import styled from "styled-components";

export const Container = styled.main`
  width: 100%;
  height: 80vh;
  margin: 0 auto;
  font-family: 'Monospace, Courier New';
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  position: relative;
  overflow: hidden;

  @media (min-width: 768px) {
    flex-direction: row;
    justify-content: space-between;
  }
`;

export const Title = styled.h2`
  font-family: 'Monospace, Courier New';
  font-style: normal;
  font-weight: 700;
  font-size: 32px;
  width: 320px;
  margin-bottom: 20px;
  line-height: 44px;
  color: #000;

  @media (min-width: 768px) {
    font-size: 28px;
    width: 100%;
  }
`;

export const TitleHighLight = styled.span`
  color: #41354e;
`;

export const TextContent = styled.p`
  width: 100%;
  font-family: 'Monospace, Courier New';
  font-style: normal;
  font-weight: 400;
  font-size: 18px;
  margin-top: 20px;
  
  color: #000;  
  text-align:center;

  @media (min-width: 768px) {
    font-size: 33px;
    margin-bottom: 16px;
    line-height: 28px;
  }
`;

export const BannerImage = styled.div<{ img: string }>`
  position: absolute;
  bottom: 11%;
  background-image: url(${(props) => props.img});
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  pointer-events: none;
  width: 40rem;
  height: 40rem;
  opacity: 0.05;

  @media (min-width: 768px) {
    position: absolute;
    left: 50%;
    width: 51rem;
    height: 49rem;
    bottom: 0;
  }
`;

export const Content = styled.div`
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width:100%;
  padding: 1rem;
  margin: 1rem;
  border: 2px solid #ccc;
  border-radius: 8px;
  background-color: rgba(0, 0, 0, 0.1);
  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);

  @media (min-width: 768px) {
    width: 30%;
    padding: 2rem;
    margin: auto;
    margin-left: 10rem;
  }
`;

export const ButtonGroup = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  width: 100%;
  height: 100%;
  margin-top:2.5rem;

  hr {
    background-color: #41354e;
    width: 100%;
    height: 1px;
    decoration:none;
    opacity:0.25;
  }
  Button{
    width:20rem;
    height:3rem;
    font-size:
  }
  Button:hover{
    background-color:#b2a3bc;
  }
`;

export const LoginSocial = styled.span`
    width: 20rem;
    height: 3rem;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 12px 20px;
    border-radius: 35px;
    background-color:#fff0ff ;
    color: #41354e;
    cursor: pointer;


    &:hover{
    background-color:#b2a3bc;
    color:#fff0ff;
  }

.material-symbols-outlined {
  margin-right:1rem;
  font-variation-settings:
  'FILL' 0,
  'wght' 400,
  'GRAD' 0,
  'opsz' 24
}
`